{"version":3,"sources":["components/Input/Input.module.css","components/Form/Form.module.css","components/Container/Container.module.css","components/Container/Container.jsx","components/Input/Input.jsx","components/Form/Form.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","App.js","index.js","components/Contacts/Contacts.module.css"],"names":["module","exports","Container","children","className","styles","Input","inputLabel","type","value","onInputChange","pattern","title","name","htmlFor","InputLabel","required","onChange","autoComplete","INITIAL_STATE","number","Form","state","inputHandler","event","currentTarget","setState","formSubmit","preventDefault","props","onSubmit","resetForm","this","FormButton","Component","Contacts","contactsItems","onDeleteContact","ContactsList","map","id","ContactsListItem","ContactValue","onClick","Filter","onFilterChange","App","contacts","filter","formSubmitHandler","contactData","isContactExist","find","alert","newContact","uuidv4","deleteContact","contact","filterHandler","FilterContacts","contactsRegisterCorretion","toLowerCase","includes","contactsSting","localStorage","getItem","parcedContacts","JSON","parse","prevProps","prevState","setItem","stringify","filtredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ea33df3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputLabel\":\"Input_InputLabel__1Tu88\",\"Input\":\"Input_Input__2l5ta\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form_Form__3sIeF\",\"FormButton\":\"Form_FormButton__BiqQu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3vVvs\"};","//модули\r\nimport PropTypes from 'prop-types';\r\n\r\n//стили\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={styles.Container}>{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","//модули\r\nimport PropTypes from 'prop-types';\r\n\r\n//стили\r\nimport styles from './Input.module.css';\r\n\r\nconst Input = ({\r\n  inputLabel,\r\n  type,\r\n  value,\r\n  onInputChange,\r\n  pattern,\r\n  title,\r\n  name,\r\n}) => {\r\n  return (\r\n    <label htmlFor=\"\" className={styles.InputLabel}>\r\n      {inputLabel}\r\n      <input\r\n        className={styles.Input}\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        pattern={pattern}\r\n        title={title}\r\n        required\r\n        onChange={onInputChange}\r\n        autoComplete=\"off\"\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  inputLabel: PropTypes.string,\r\n  name: PropTypes.string,\r\n  type: PropTypes.string,\r\n  pattern: PropTypes.string,\r\n  title: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onInputChange: PropTypes.func,\r\n};\r\n\r\nexport default Input;\r\n","//модули\r\nimport React, { Component } from 'react';\r\n\r\n//компоненты\r\nimport Input from '../Input';\r\n\r\n//стили\r\nimport styles from './Form.module.css';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n  };\r\n\r\n  inputHandler = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  formSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.Form} onSubmit={this.formSubmit}>\r\n        <Input\r\n          inputLabel=\"Name\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onInputChange={this.inputHandler}\r\n        />\r\n        <Input\r\n          inputLabel=\"Number\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onInputChange={this.inputHandler}\r\n        />\r\n        <button type=\"submit\" className={styles.FormButton}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","//модули\r\nimport PropTypes from 'prop-types';\r\n\r\n//стили\r\nimport styles from './Contacts.module.css';\r\n\r\nconst Contacts = ({ contactsItems, onDeleteContact }) => {\r\n  return (\r\n    <div className={styles.Contacts}>\r\n      <ul className={styles.ContactsList}>\r\n        {contactsItems.map(({ name, id, number }) => {\r\n          return (\r\n            <li key={id} className={styles.ContactsListItem}>\r\n              <span className={styles.ContactValue}>\r\n                {name}: {number}\r\n              </span>\r\n              <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n                delete\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  contactsItems: PropTypes.array,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default Contacts;\r\n","//модули\r\nimport PropTypes from 'prop-types';\r\n\r\n//компоненты\r\nimport Input from '../Input';\r\n\r\nconst Filter = ({ name, onFilterChange }) => {\r\n  return (\r\n    <Input\r\n      inputLabel=\"Find contacts by name\"\r\n      type=\"text\"\r\n      name=\"name\"\r\n      value={name}\r\n      onInputChange={onFilterChange}\r\n    />\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  name: PropTypes.string,\r\n  onFilterChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","// модули\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\n//компоненты\nimport Container from './components/Container';\nimport Form from './components/Form';\nimport Contacts from './components/Contacts';\nimport Filter from './components/Filter';\n\n//данные\n// import contacts from './contacts.json';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contactsSting = localStorage.getItem('contacts');\n    const parcedContacts = JSON.parse(contactsSting);\n\n    if (parcedContacts) {\n      this.setState({ contacts: parcedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  formSubmitHandler = contactData => {\n    const { contacts } = this.state;\n    const isContactExist = contacts.find(\n      ({ name }) => name === contactData.name,\n    );\n\n    if (!!isContactExist) {\n      alert(`${isContactExist.name} is already in contacts`);\n      return;\n    }\n\n    const newContact = { ...contactData, id: uuidv4() };\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  deleteContact = id => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  filterHandler = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  FilterContacts = () => {\n    const { contacts, filter } = this.state;\n\n    const contactsRegisterCorretion = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(contactsRegisterCorretion),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const filtredContacts = this.FilterContacts();\n    return (\n      <Container>\n        <h2 className=\"Title\">Phonebook</h2>\n        <Form onSubmit={this.formSubmitHandler} />\n        <h2 className=\"Title\">Contacts</h2>\n        <Filter name={filter} onFilterChange={this.filterHandler} />\n        <Contacts\n          contactsItems={filtredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n//Стили\nimport './style.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contacts\":\"Contacts_Contacts__1myeB\",\"ContactsList\":\"Contacts_ContactsList__3cy9A\",\"ContactsListItem\":\"Contacts_ContactsListItem__CPYUI\",\"ContactValue\":\"Contacts_ContactValue__3z4Mc\"};"],"sourceRoot":""}